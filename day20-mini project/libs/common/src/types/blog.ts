// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v3.20.3
// source: proto/blog.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "blog";

export interface Post {
  id: number;
  title: string;
  content: string;
  authorId: number;
}

export interface CreatePostDto {
  title: string;
  content: string;
  authorId: number;
}

export interface UpdatePostDto {
  id: number;
  title: string;
  content: string;
}

export interface Id {
  id: number;
}

export interface Empty {
}

export interface PostList {
  posts: Post[];
}

export const BLOG_PACKAGE_NAME = "blog";

export interface BlogServiceClient {
  createPost(request: CreatePostDto): Observable<Post>;

  updatePost(request: UpdatePostDto): Observable<Post>;

  deletePost(request: Id): Observable<Empty>;

  getPostById(request: Id): Observable<Post>;

  getAllPosts(request: Empty): Observable<PostList>;
}

export interface BlogServiceController {
  createPost(request: CreatePostDto): Promise<Post> | Observable<Post> | Post;

  updatePost(request: UpdatePostDto): Promise<Post> | Observable<Post> | Post;

  deletePost(request: Id): Promise<Empty> | Observable<Empty> | Empty;

  getPostById(request: Id): Promise<Post> | Observable<Post> | Post;

  getAllPosts(request: Empty): Promise<PostList> | Observable<PostList> | PostList;
}

export function BlogServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createPost", "updatePost", "deletePost", "getPostById", "getAllPosts"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("BlogService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("BlogService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const BLOG_SERVICE_NAME = "BlogService";
